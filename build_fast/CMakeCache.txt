# This is the CMakeCache file.
# For build in directory: e:/work/blender_fork/build_fast
# It was generated by CMake: C:/Program Files/CMake/bin/cmake.exe
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Use instead of the current date for reproducible builds (empty
// string disables this option)
BUILDINFO_OVERRIDE_DATE:STRING=

//Use instead of the current time for reproducible builds (empty
// string disables this option)
BUILDINFO_OVERRIDE_TIME:STRING=

//Value Computed by CMake
Blender_BINARY_DIR:STATIC=E:/work/blender_fork/build_fast

//Value Computed by CMake
Blender_IS_TOP_LEVEL:STATIC=ON

//Value Computed by CMake
Blender_SOURCE_DIR:STATIC=E:/work/blender_fork

//Path to a program.
CMAKE_AR:FILEPATH=D:/rj/zhuanye/vstudio/VC/Tools/MSVC/14.44.35207/bin/Hostx86/x86/lib.exe

//Choose the type of build, options are: None Debug Release RelWithDebInfo
// MinSizeRel ...
CMAKE_BUILD_TYPE:STRING=Release

//CXX compiler
CMAKE_CXX_COMPILER:FILEPATH=D:/rj/zhuanye/vstudio/VC/Tools/MSVC/14.44.35207/bin/Hostx86/x86/cl.exe

//No help, variable specified on the command line.
CMAKE_CXX_COMPILER_LAUNCHER:UNINITIALIZED=ccache

//Flags used by the CXX compiler during all build types.
CMAKE_CXX_FLAGS:STRING=/DWIN32 /D_WINDOWS /W3 /GR /EHsc

//Flags used by the CXX compiler during DEBUG builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=/MDd /Zi /Ob0 /Od /RTC1

//Flags used by the CXX compiler during MINSIZEREL builds.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=/MD /O1 /Ob1 /DNDEBUG

CMAKE_CXX_FLAGS_RELEASE:STRING=/MD /O2 /Ob2 /DNDEBUG

//Flags used by the CXX compiler during RELWITHDEBINFO builds.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=/MD /Zi /O2 /Ob1 /DNDEBUG

//Libraries linked by default with all C++ applications.
CMAKE_CXX_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//C compiler
CMAKE_C_COMPILER:FILEPATH=D:/rj/zhuanye/vstudio/VC/Tools/MSVC/14.44.35207/bin/Hostx86/x86/cl.exe

//No help, variable specified on the command line.
CMAKE_C_COMPILER_LAUNCHER:UNINITIALIZED=ccache

//Flags used by the C compiler during all build types.
CMAKE_C_FLAGS:STRING=/DWIN32 /D_WINDOWS /W3

//Flags used by the C compiler during DEBUG builds.
CMAKE_C_FLAGS_DEBUG:STRING=/MDd /Zi /Ob0 /Od /RTC1

//Flags used by the C compiler during MINSIZEREL builds.
CMAKE_C_FLAGS_MINSIZEREL:STRING=/MD /O1 /Ob1 /DNDEBUG

CMAKE_C_FLAGS_RELEASE:STRING=/MD /O2 /Ob2 /DNDEBUG

//Flags used by the C compiler during RELWITHDEBINFO builds.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=/MD /Zi /O2 /Ob1 /DNDEBUG

//Libraries linked by default with all C applications.
CMAKE_C_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//Flags used by the linker during all build types.
CMAKE_EXE_LINKER_FLAGS:STRING=/machine:X86

//Flags used by the linker during DEBUG builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during MINSIZEREL builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during RELEASE builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during RELWITHDEBINFO builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Enable/Disable output of build database during the build.
CMAKE_EXPORT_BUILD_DATABASE:BOOL=

//Enable/Disable output of compile commands during generation.
CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=

//Value Computed by CMake.
CMAKE_FIND_PACKAGE_REDIRECTS_DIR:STATIC=E:/work/blender_fork/build_fast/CMakeFiles/pkgRedirects

//default install path
CMAKE_INSTALL_PREFIX:PATH=E:/work/blender_fork/build_fast/bin/${BUILD_TYPE}

//Path to a program.
CMAKE_LINKER:FILEPATH=D:/rj/zhuanye/vstudio/VC/Tools/MSVC/14.44.35207/bin/Hostx86/x86/link.exe

//Program used to build from build.ninja files.
CMAKE_MAKE_PROGRAM:FILEPATH=C:/ninja/ninja.exe

//Flags used by the linker during the creation of modules during
// all build types.
CMAKE_MODULE_LINKER_FLAGS:STRING=/machine:X86

//Flags used by the linker during the creation of modules during
// DEBUG builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during the creation of modules during
// MINSIZEREL builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of modules during
// RELEASE builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of modules during
// RELWITHDEBINFO builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Path to a program.
CMAKE_MT:FILEPATH=D:/Windows Kits/10/bin/10.0.26100.0/x86/mt.exe

//Value Computed by CMake
CMAKE_PROJECT_COMPAT_VERSION:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_DESCRIPTION:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_HOMEPAGE_URL:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=Blender

//Value Computed by CMake
CMAKE_PROJECT_VERSION:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_VERSION_MAJOR:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_VERSION_MINOR:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_VERSION_PATCH:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_VERSION_TWEAK:STATIC=

//RC compiler
CMAKE_RC_COMPILER:FILEPATH=D:/Windows Kits/10/bin/10.0.26100.0/x86/rc.exe

//Flags for Windows Resource Compiler during all build types.
CMAKE_RC_FLAGS:STRING=-DWIN32

//Flags for Windows Resource Compiler during DEBUG builds.
CMAKE_RC_FLAGS_DEBUG:STRING=-D_DEBUG

//Flags for Windows Resource Compiler during MINSIZEREL builds.
CMAKE_RC_FLAGS_MINSIZEREL:STRING=

//Flags for Windows Resource Compiler during RELEASE builds.
CMAKE_RC_FLAGS_RELEASE:STRING=

//Flags for Windows Resource Compiler during RELWITHDEBINFO builds.
CMAKE_RC_FLAGS_RELWITHDEBINFO:STRING=

//Flags used by the linker during the creation of shared libraries
// during all build types.
CMAKE_SHARED_LINKER_FLAGS:STRING=/machine:X86

//Flags used by the linker during the creation of shared libraries
// during DEBUG builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during the creation of shared libraries
// during MINSIZEREL builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of shared libraries
// during RELEASE builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of shared libraries
// during RELWITHDEBINFO builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the archiver during the creation of static libraries
// during all build types.
CMAKE_STATIC_LINKER_FLAGS:STRING=/machine:X86

//Flags used by the archiver during the creation of static libraries
// during DEBUG builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the archiver during the creation of static libraries
// during MINSIZEREL builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the archiver during the creation of static libraries
// during RELEASE builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the archiver during the creation of static libraries
// during RELWITHDEBINFO builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Use instead of the standard packagename (empty string disables
// this option)
CPACK_OVERRIDE_PACKAGENAME:STRING=

//CUDA architectures to build binaries for
CYCLES_CUDA_BINARIES_ARCH:STRING=sm_30;sm_35;sm_37;sm_50;sm_52;sm_60;sm_61;sm_70;sm_75;sm_86;sm_89;sm_120;compute_75

//AMD HIP architectures to build binaries for
CYCLES_HIP_BINARIES_ARCH:STRING=gfx1010;gfx1011;gfx1012;gfx1030;gfx1031;gfx1032;gfx1034;gfx1035;gfx1036;gfx1100;gfx1101;gfx1102;gfx1103;gfx1150;gfx1151;gfx1152;gfx1200;gfx1201

//oneAPI Intel GPU architectures to build binaries for
CYCLES_ONEAPI_INTEL_BINARIES_ARCH:STRING=dg2;mtl;lnl;bmg

//oneAPI targets to build AOT binaries for
CYCLES_ONEAPI_SYCL_TARGETS:STRING=spir64;spir64_gen

//Path to the OptiX SDK root directory. When set, this path will
// be used at runtime to compile OptiX kernels.
CYCLES_RUNTIME_OPTIX_ROOT_DIR:PATH=

//Run regression tests on the specified device types (CPU CUDA
// OPTIX HIP HIP-RT METAL METAL-RT ONEAPI ONEAPI-RT)
CYCLES_TEST_DEVICES:STRING=CPU

//Git command line client
GIT_EXECUTABLE:FILEPATH=C:/Program Files/Git/cmd/git.exe

//Organize the projects according to source directory structure.
IDE_GROUP_PROJECTS_IN_FOLDERS:BOOL=ON

//Organize the source files in filters matching the source directory.
IDE_GROUP_SOURCES_IN_FOLDERS:BOOL=ON

//Link with LLVM static libraries
LLVM_STATIC:BOOL=OFF

//Path to a file.
MSVC_REDIST_DIR:PATH=D:/rj/zhuanye/vstudio/VC/Redist/MSVC/14.44.35112

//Path to the OptiX SDK root directory, for building Cycles OptiX
// kernels.
OPTIX_ROOT_DIR:PATH=

//Run given CMake script as the last step of CMake configuration
POSTCONFIGURE_SCRIPT:FILEPATH=

//Run given CMake script after installation process
POSTINSTALL_SCRIPT:FILEPATH=

//Path to python site-packages or dist-packages containing 'zstandard'
// module
PYTHON_ZSTANDARD_PATH:PATH=

//Python executable to run unit tests
TEST_PYTHON_EXE:PATH=

//Python executable used to run 'system python' tests
TEST_SYSTEM_PYTHON_EXE:PATH=

//Path to a file.
WINDOWS_KITS_DIR:PATH=D:/Windows Kits/10

//Enable Alembic Support
WITH_ALEMBIC:BOOL=ON

//Call abort() when raising an assertion through BLI_assert()
WITH_ASSERT_ABORT:BOOL=ON

//Build with asserts enabled even for non-debug configurations
WITH_ASSERT_RELEASE:BOOL=OFF

//Build with blenders audio library (only disable if you know what
// you're doing!)
WITH_AUDASPACE:BOOL=ON

//Build blender (disable to build only Cycles stand-alone).
WITH_BLENDER:BOOL=ON

//Build "BlendThumb.dll" helper for Windows explorer integration
// to support extracting thumbnails from `.blend` files.
WITH_BLENDER_THUMBNAILER:BOOL=ON

//Enable features depending on boost
WITH_BOOST:BOOL=ON

//Include extra build details (only disable for development & faster
// builds)
WITH_BUILDINFO:BOOL=ON

//Enable Bullet (Physics Engine)
WITH_BULLET:BOOL=ON

//Use Clang
WITH_CLANG:BOOL=OFF

//Enable FFMPeg Support (http://ffmpeg.org)
WITH_CODEC_FFMPEG:BOOL=ON

//Enable libsndfile Support (http://www.mega-nerd.com/libsndfile)
WITH_CODEC_SNDFILE:BOOL=ON

//Build and link against address sanitizer (only for Debug & RelWithDebInfo
// targets).
WITH_COMPILER_ASAN:BOOL=OFF

//Build `extern` dependencies with address sanitizer when WITH_COMPILER_ASAN
// is on. Can cause linking issues due to too large binary size.
WITH_COMPILER_ASAN_EXTERN:BOOL=OFF

//Build and link with code coverage support (only for Debug targets).
WITH_COMPILER_CODE_COVERAGE:BOOL=OFF

//Use pre-compiled headers to speed up compilation.
WITH_COMPILER_PRECOMPILED_HEADERS:BOOL=ON

//Report when a CPU is not compatible on startup instead of failing
// to start with an inscrutable error.
WITH_CPU_CHECK:BOOL=ON

//Enable SIMD instruction if they're detected on the host machine
WITH_CPU_SIMD:BOOL=ON

//Dynamically load CUDA libraries at runtime (for developers, makes
// cuda-gdb work)
WITH_CUDA_DYNLOAD:BOOL=ON

//Enable Cycles Render Engine
WITH_CYCLES:BOOL=ON

//Build Cycles NVIDIA CUDA binaries
WITH_CYCLES_CUDA_BINARIES:BOOL=OFF

//Build cubins one after another (useful on machines with limited
// RAM)
WITH_CYCLES_CUDA_BUILD_SERIAL:BOOL=OFF

//Build Cycles with options useful for debugging (e.g., MIS)
WITH_CYCLES_DEBUG:BOOL=OFF

//Build Cycles with additional asserts for detecting NaNs and invalid
// values
WITH_CYCLES_DEBUG_NAN:BOOL=OFF

//Enable Cycles NVIDIA CUDA compute support
WITH_CYCLES_DEVICE_CUDA:BOOL=ON

//Enable Cycles AMD HIP support
WITH_CYCLES_DEVICE_HIP:BOOL=ON

//Enable Cycles AMD HIPRT support
WITH_CYCLES_DEVICE_HIPRT:BOOL=OFF

//Enable Cycles oneAPI compute support
WITH_CYCLES_DEVICE_ONEAPI:BOOL=OFF

//Enable Cycles NVIDIA OptiX support
WITH_CYCLES_DEVICE_OPTIX:BOOL=ON

//Build Cycles with Embree support
WITH_CYCLES_EMBREE:BOOL=ON

//Build Cycles AMD HIP binaries
WITH_CYCLES_HIP_BINARIES:BOOL=OFF

//Build Cycles Hydra render delegate
WITH_CYCLES_HYDRA_RENDER_DELEGATE:BOOL=OFF

//Build Cycles kernels with address sanitizer when WITH_COMPILER_ASAN
// is on, even if it's very slow
WITH_CYCLES_KERNEL_ASAN:BOOL=OFF

//Build Cycles with logging support
WITH_CYCLES_LOGGING:BOOL=ON

//Build Cycles with native kernel only (which fits current CPU,
// use for development only)
WITH_CYCLES_NATIVE_ONLY:BOOL=OFF

//Enable Ahead-Of-Time compilation for Cycles oneAPI device
WITH_CYCLES_ONEAPI_BINARIES:BOOL=OFF

//Switch target of oneAPI implementation from SYCL devices to Host
// Task (single thread on CPU). This option is only for debugging
// purposes.
WITH_CYCLES_ONEAPI_HOST_TASK_EXECUTION:BOOL=OFF

//Build Cycles with OpenShadingLanguage support
WITH_CYCLES_OSL:BOOL=ON

//Build Cycles with path guiding support
WITH_CYCLES_PATH_GUIDING:BOOL=ON

//Build Cycles data precomputation tool
WITH_CYCLES_PRECOMPUTE:BOOL=OFF

//Build Cycles standalone application
WITH_CYCLES_STANDALONE:BOOL=OFF

//Build Cycles standalone with GUI
WITH_CYCLES_STANDALONE_GUI:BOOL=OFF

//Run additional Cycles test with OSL enabled
WITH_CYCLES_TEST_OSL:BOOL=OFF

//Enable Draco mesh compression Python module (used for glTF)
WITH_DRACO:BOOL=ON

//Add extra debug capabilities to Draw Manager
WITH_DRAW_DEBUG:BOOL=OFF

//Enable experimental features
WITH_EXPERIMENTAL_FEATURES:BOOL=ON

//Enable FFTW3 support (Used for smoke, ocean sim, glare, and audio
// effects)
WITH_FFTW3:BOOL=ON

//Enable Freestyle (advanced edges rendering)
WITH_FREESTYLE:BOOL=ON

//Enable features relying on fribidi
WITH_FRIBIDI:BOOL=OFF

//Enable debugging output for the GHOST library
WITH_GHOST_DEBUG:BOOL=OFF

//Enable building Blender against SDL for windowing rather than
// the native APIs
WITH_GHOST_SDL:BOOL=OFF

//Enable features depending on GMP (Exact Boolean)
WITH_GMP:BOOL=ON

//Enable GPU backend related unit testing
WITH_GPU_BACKEND_TESTS:BOOL=OFF

//Enable regression testing for GPU compositor
WITH_GPU_COMPOSITOR_TESTS:BOOL=OFF

//Enable GPU drawing related unit testing (draw manager)
WITH_GPU_DRAW_TESTS:BOOL=OFF

//Enable GPU render related unit testing (EEVEE, Workbench and
// Grease Pencil)
WITH_GPU_RENDER_TESTS:BOOL=OFF

//Enable GPU render related unit testing that doesn't work in background
// mode. These tests require an environment with a display server
// to run. Requires WITH_GPU_RENDER_TESTS 
WITH_GPU_RENDER_TESTS_HEADED:BOOL=OFF

//Run GPU render tests silently (finished tests will pass). Generated
// report will show failing tests
WITH_GPU_RENDER_TESTS_SILENT:BOOL=ON

//Enable GPU render related unit testing using Vulkan
WITH_GPU_RENDER_TESTS_VULKAN:BOOL=OFF

//Globally enable in-shader asserts.
//\n(Requires a debug build or setting GPU_FORCE_ENABLE_SHADER_PRINTF
// to 1)
WITH_GPU_SHADER_ASSERT:BOOL=OFF

//  Compiler shaders using C++.   Allows testing Metal compilation
// on other platform and enable C++ IDE support for shader code
WITH_GPU_SHADER_CPP_COMPILATION:BOOL=OFF

//Enable GTest unit testing
WITH_GTESTS:BOOL=OFF

//Enable features relying on harfbuzz
WITH_HARFBUZZ:BOOL=OFF

//Enable features relying on Libharu (Grease pencil PDF export)
WITH_HARU:BOOL=ON

//Build without graphical support (renderfarm, server mode only)
WITH_HEADLESS:BOOL=OFF

//Enable Hydra render engine
WITH_HYDRA:BOOL=ON

//Enable ITASC IK solver (only disable for development & for incompatible
// C++ compilers)
WITH_IK_ITASC:BOOL=ON

//Enable Legacy IK solver (only disable for development)
WITH_IK_SOLVER:BOOL=ON

//Enable CINEON and DPX Image Support
WITH_IMAGE_CINEON:BOOL=ON

//Enable OpenEXR Support (http://www.openexr.com)
WITH_IMAGE_OPENEXR:BOOL=ON

//Enable OpenJpeg Support (http://www.openjpeg.org)
WITH_IMAGE_OPENJPEG:BOOL=ON

//Enable WebP Image Support
WITH_IMAGE_WEBP:BOOL=ON

//Enable Input Method Editor (IME) for complex Asian character
// input
WITH_INPUT_IME:BOOL=ON

//Enable NDOF input devices (SpaceNavigator and friends)
WITH_INPUT_NDOF:BOOL=ON

//Copy the official Blender Authors's copyright.txt into the Blender
// install directory
WITH_INSTALL_COPYRIGHT:BOOL=OFF

//Enable I18N (International fonts and text)
WITH_INTERNATIONAL:BOOL=ON

//Enable grease-pencil file format IO (*.svg, *.pdf)
WITH_IO_GREASE_PENCIL:BOOL=ON

//Enable PLY 3D file format support (*.ply)
WITH_IO_PLY:BOOL=ON

//Enable STL 3D file format support (*.stl)
WITH_IO_STL:BOOL=ON

//Enable Wavefront-OBJ 3D file format support (*.obj)
WITH_IO_WAVEFRONT_OBJ:BOOL=ON

//Enable Libmv structure from motion library
WITH_LIBMV:BOOL=ON

//Enable fixed-size schur specializations.
WITH_LIBMV_SCHUR_SPECIALIZATIONS:BOOL=ON

//Use LLVM
WITH_LLVM:BOOL=OFF

//Enable best LZMA compression, (used for pointcache)
WITH_LZMA:BOOL=ON

//Enable fast LZO compression (used for pointcache)
WITH_LZO:BOOL=ON

//Enable MaterialX Support
WITH_MATERIALX:BOOL=ON

//Enable malloc replacement (http://www.canonware.com/jemalloc)
WITH_MEM_JEMALLOC:BOOL=ON

//Enable extended valgrind support for better reporting
WITH_MEM_VALGRIND:BOOL=OFF

//Enable Mantaflow Fluid Simulation Framework
WITH_MOD_FLUID:BOOL=ON

//Enable Ocean Modifier
WITH_MOD_OCEANSIM:BOOL=ON

//Enable Remesh Modifier
WITH_MOD_REMESH:BOOL=ON

//Enable usage of NanoVDB data structure for rendering on the GPU
WITH_NANOVDB:BOOL=ON

//Enable Ninja pools of jobs, to try to ease building on machines
// with 16GB of RAM or less (if not yet defined, will try to set
// best values based on detected machine specifications).
WITH_NINJA_POOL_JOBS:BOOL=ON

//Enable OpenAL Support (http://www.openal.org)
WITH_OPENAL:BOOL=ON

//Enable OpenCollada Support (http://www.opencollada.org)
WITH_OPENCOLLADA:BOOL=ON

//Enable OpenColorIO color management
WITH_OPENCOLORIO:BOOL=ON

//Enable OpenGL support as graphic backend
WITH_OPENGL_BACKEND:BOOL=ON

//Enable the OpenImageDenoise compositing node
WITH_OPENIMAGEDENOISE:BOOL=ON

//Enable OpenMP (has to be supported by the compiler)
WITH_OPENMP:BOOL=ON

//Enable OpenSubdiv for surface subdivision
WITH_OPENSUBDIV:BOOL=ON

//Enable features relying on OpenVDB
WITH_OPENVDB:BOOL=ON

//Assume OpenVDB library has been compiled with version 3 ABI compatibility
WITH_OPENVDB_3_ABI_COMPATIBLE:BOOL=OFF

//Enable blosc compression for OpenVDB, only enable if OpenVDB
// was built with blosc support
WITH_OPENVDB_BLOSC:BOOL=ON

//Enable features relying on potrace
WITH_POTRACE:BOOL=ON

//No help, variable specified on the command line.
WITH_PRECOMPILED_HEADERS:UNINITIALIZED=ON

//Enable PugiXML support (Used for OpenImageIO, Grease Pencil SVG
// export)
WITH_PUGIXML:BOOL=ON

//Enable Embedded Python API (only disable for development)
WITH_PYTHON:BOOL=ON

//Copy system python into the blender install directory
WITH_PYTHON_INSTALL:BOOL=ON

//Copy system NumPy into the blender install directory
WITH_PYTHON_INSTALL_NUMPY:BOOL=ON

//Copy zstandard into the blender install directory
WITH_PYTHON_INSTALL_ZSTANDARD:BOOL=ON

//Enable building as a python module which runs without a user
// interface, like running regular blender in background mode (only
// enable for development), installs to PYTHON_SITE_PACKAGES (or
// CMAKE_INSTALL_PREFIX if WITH_INSTALL_PORTABLE is enabled).
WITH_PYTHON_MODULE:BOOL=OFF

//Include NumPy in Blender (used by Audaspace and Mantaflow)
WITH_PYTHON_NUMPY:BOOL=ON

//Enable internal API error checking to track invalid data to prevent
// crash on access (at the expense of some efficiency, only enable
// for development).
WITH_PYTHON_SAFETY:BOOL=OFF

//Disables execution of scripts within blend files by default
WITH_PYTHON_SECURITY:BOOL=ON

//Build with quadriflow remesher support
WITH_QUADRIFLOW:BOOL=ON

//Use Renderdoc API to capture frames
WITH_RENDERDOC:BOOL=OFF

//Enable SDL for sound
WITH_SDL:BOOL=OFF

//No help, variable specified on the command line.
WITH_STATIC_LIBS:UNINITIALIZED=ON

//When requirements for a build option are not met, error instead
// of disabling the option.
WITH_STRICT_BUILD_OPTIONS:BOOL=OFF

//Ensure string operations on fixed size buffers (works well with
// with "WITH_COMPILER_ASAN" & valgrind to detect incorrect buffer
// size arguments)
WITH_STRSIZE_DEBUG:BOOL=OFF

//Build with external audaspace library installed on the system
// (only enable if you know what you're doing!)
WITH_SYSTEM_AUDASPACE:BOOL=OFF

//Use the systems bullet library (currently unsupported due to
// missing features in upstream!)
WITH_SYSTEM_BULLET:BOOL=OFF

//Use system-wide Gflags instead of a bundled one
WITH_SYSTEM_GFLAGS:BOOL=OFF

//Use system-wide Glog instead of a bundled one
WITH_SYSTEM_GLOG:BOOL=OFF

//Enable tests validating some build-related scripts against the
// 'system' version of Python (buildbots currently can use significantly
// older versions of Python than Blender's)
WITH_SYSTEM_PYTHON_TESTS:BOOL=OFF

//Enable multi-threading. TBB is also required for features such
// as Cycles, OpenVDB and USD
WITH_TBB:BOOL=ON

//Enable the TBB malloc replacement
WITH_TBB_MALLOC_PROXY:BOOL=ON

//Run multiple tests in a single Blender invocation, for faster
// test execution
WITH_TESTS_BATCHED:BOOL=ON

//Link GTest tests into a single binary. For faster overall build
// and less disk space, but slower individual test build
WITH_TESTS_SINGLE_BINARY:BOOL=ON

//Enable unity build for modules that support it to improve compile
// times.
//\nWARNING: this option allows files to be built without all necessary
// headers!
//\n
//\nThis option should be disabled before manipulating or removing
// headers.
WITH_UNITY_BUILD:BOOL=ON

//Enable Universal Scene Description (USD) Support
WITH_USD:BOOL=ON

//SLIM UV unwrapping solver
WITH_UV_SLIM:BOOL=ON

//Enable Vulkan as graphics backend (experimental)
WITH_VULKAN_BACKEND:BOOL=ON

//Enable Windows Audio Sessions API for audio support on Windows
WITH_WASAPI:BOOL=ON

//Bundle the C runtime for install free distribution.
WITH_WINDOWS_BUNDLE_CRT:BOOL=ON

//Use external manifest files
WITH_WINDOWS_EXTERNAL_MANIFEST:BOOL=OFF

//Use find_package to locate libraries
WITH_WINDOWS_FIND_MODULES:BOOL=OFF

//Generate a pdb file for client side stacktraces for release builds
WITH_WINDOWS_RELEASE_PDB:BOOL=ON

//Use a stripped PDB file for release builds
WITH_WINDOWS_RELEASE_STRIPPED_PDB:BOOL=ON

//Use sccache to speed up builds (Ninja builder only)
WITH_WINDOWS_SCCACHE:BOOL=OFF

//Enable VR features through the OpenXR specification
WITH_XR_OPENXR:BOOL=ON


########################
# INTERNAL cache entries
########################

//ADVANCED property for variable: BUILDINFO_OVERRIDE_DATE
BUILDINFO_OVERRIDE_DATE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: BUILDINFO_OVERRIDE_TIME
BUILDINFO_OVERRIDE_TIME-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=e:/work/blender_fork/build_fast
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=4
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=1
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=0
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=C:/Program Files/CMake/bin/cmake.exe
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=C:/Program Files/CMake/bin/cpack.exe
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=C:/Program Files/CMake/bin/ctest.exe
//ADVANCED property for variable: CMAKE_CXX_COMPILER
CMAKE_CXX_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_STANDARD_LIBRARIES
CMAKE_CXX_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER
CMAKE_C_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_STANDARD_LIBRARIES
CMAKE_C_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//Path to cache edit program executable.
CMAKE_EDIT_COMMAND:INTERNAL=C:/Program Files/CMake/bin/cmake-gui.exe
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=Unknown
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXPORT_BUILD_DATABASE
CMAKE_EXPORT_BUILD_DATABASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXPORT_COMPILE_COMMANDS
CMAKE_EXPORT_COMPILE_COMMANDS-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Ninja
//Generator instance identifier.
CMAKE_GENERATOR_INSTANCE:INTERNAL=
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=E:/work/blender_fork
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//Name of CMakeLists files to read
CMAKE_LIST_FILE_NAME:INTERNAL=CMakeLists.txt
//ADVANCED property for variable: CMAKE_MAKE_PROGRAM
CMAKE_MAKE_PROGRAM-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MT
CMAKE_MT-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=1
CMAKE_OPTIMIZE_DEPENDENCIES:INTERNAL=ON
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//noop for ranlib
CMAKE_RANLIB:INTERNAL=:
//ADVANCED property for variable: CMAKE_RC_COMPILER
CMAKE_RC_COMPILER-ADVANCED:INTERNAL=1
CMAKE_RC_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS
CMAKE_RC_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_DEBUG
CMAKE_RC_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_MINSIZEREL
CMAKE_RC_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_RELEASE
CMAKE_RC_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_RELWITHDEBINFO
CMAKE_RC_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=C:/Program Files/CMake/share/cmake-4.1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_OVERRIDE_PACKAGENAME
CPACK_OVERRIDE_PACKAGENAME-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CYCLES_CUDA_BINARIES_ARCH
CYCLES_CUDA_BINARIES_ARCH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CYCLES_HIP_BINARIES_ARCH
CYCLES_HIP_BINARIES_ARCH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CYCLES_ONEAPI_INTEL_BINARIES_ARCH
CYCLES_ONEAPI_INTEL_BINARIES_ARCH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CYCLES_ONEAPI_SYCL_TARGETS
CYCLES_ONEAPI_SYCL_TARGETS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CYCLES_RUNTIME_OPTIX_ROOT_DIR
CYCLES_RUNTIME_OPTIX_ROOT_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CYCLES_TEST_DEVICES
CYCLES_TEST_DEVICES-ADVANCED:INTERNAL=1
EXECUTABLE_OUTPUT_PATH:INTERNAL=E:/work/blender_fork/build_fast/bin
//Details about finding Git
FIND_PACKAGE_MESSAGE_DETAILS_Git:INTERNAL=[C:/Program Files/Git/cmd/git.exe][v2.49.0.windows.1()]
//ADVANCED property for variable: GIT_EXECUTABLE
GIT_EXECUTABLE-ADVANCED:INTERNAL=1
//Have symbol malloc_stats
HAVE_MALLOC_STATS_H:INTERNAL=
//ADVANCED property for variable: IDE_GROUP_PROJECTS_IN_FOLDERS
IDE_GROUP_PROJECTS_IN_FOLDERS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: IDE_GROUP_SOURCES_IN_FOLDERS
IDE_GROUP_SOURCES_IN_FOLDERS-ADVANCED:INTERNAL=1
LIBRARY_OUTPUT_PATH:INTERNAL=E:/work/blender_fork/build_fast/lib
//ADVANCED property for variable: LLVM_STATIC
LLVM_STATIC-ADVANCED:INTERNAL=1
//ADVANCED property for variable: MSVC_REDIST_DIR
MSVC_REDIST_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: OPTIX_ROOT_DIR
OPTIX_ROOT_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: POSTCONFIGURE_SCRIPT
POSTCONFIGURE_SCRIPT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: POSTINSTALL_SCRIPT
POSTINSTALL_SCRIPT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: PYTHON_ZSTANDARD_PATH
PYTHON_ZSTANDARD_PATH-ADVANCED:INTERNAL=1
//Test SUPPORT_NEON_BUILD
SUPPORT_NEON_BUILD:INTERNAL=
//Test SUPPORT_SSE42_BUILD
SUPPORT_SSE42_BUILD:INTERNAL=1
//Result of TRY_COMPILE
SUPPORT_SSE42_BUILD_COMPILED:INTERNAL=TRUE
//Result of try_run()
SUPPORT_SSE42_BUILD_EXITCODE:INTERNAL=0
TESTS_OUTPUT_DIR:INTERNAL=E:/work/blender_fork/build_fast/bin/tests/
//ADVANCED property for variable: TEST_PYTHON_EXE
TEST_PYTHON_EXE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: TEST_SYSTEM_PYTHON_EXE
TEST_SYSTEM_PYTHON_EXE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WINDOWS_KITS_DIR
WINDOWS_KITS_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_ASSERT_ABORT
WITH_ASSERT_ABORT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_ASSERT_RELEASE
WITH_ASSERT_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_AUDASPACE
WITH_AUDASPACE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_BLENDER
WITH_BLENDER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_COMPILER_ASAN
WITH_COMPILER_ASAN-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_COMPILER_ASAN_EXTERN
WITH_COMPILER_ASAN_EXTERN-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_COMPILER_CODE_COVERAGE
WITH_COMPILER_CODE_COVERAGE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_COMPILER_PRECOMPILED_HEADERS
WITH_COMPILER_PRECOMPILED_HEADERS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_CPU_CHECK
WITH_CPU_CHECK-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_CPU_SIMD
WITH_CPU_SIMD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_CUDA_DYNLOAD
WITH_CUDA_DYNLOAD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_CYCLES_CUDA_BUILD_SERIAL
WITH_CYCLES_CUDA_BUILD_SERIAL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_CYCLES_DEBUG_NAN
WITH_CYCLES_DEBUG_NAN-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_CYCLES_DEVICE_CUDA
WITH_CYCLES_DEVICE_CUDA-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_CYCLES_DEVICE_HIP
WITH_CYCLES_DEVICE_HIP-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_CYCLES_DEVICE_HIPRT
WITH_CYCLES_DEVICE_HIPRT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_CYCLES_KERNEL_ASAN
WITH_CYCLES_KERNEL_ASAN-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_CYCLES_LOGGING
WITH_CYCLES_LOGGING-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_CYCLES_NATIVE_ONLY
WITH_CYCLES_NATIVE_ONLY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_CYCLES_ONEAPI_HOST_TASK_EXECUTION
WITH_CYCLES_ONEAPI_HOST_TASK_EXECUTION-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_CYCLES_PRECOMPUTE
WITH_CYCLES_PRECOMPUTE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_CYCLES_TEST_OSL
WITH_CYCLES_TEST_OSL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_DRAW_DEBUG
WITH_DRAW_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_GHOST_DEBUG
WITH_GHOST_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_GHOST_SDL
WITH_GHOST_SDL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_GPU_RENDER_TESTS_HEADED
WITH_GPU_RENDER_TESTS_HEADED-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_GPU_RENDER_TESTS_VULKAN
WITH_GPU_RENDER_TESTS_VULKAN-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_GPU_SHADER_ASSERT
WITH_GPU_SHADER_ASSERT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_GPU_SHADER_CPP_COMPILATION
WITH_GPU_SHADER_CPP_COMPILATION-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_HEADLESS
WITH_HEADLESS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_INSTALL_COPYRIGHT
WITH_INSTALL_COPYRIGHT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_LIBMV_SCHUR_SPECIALIZATIONS
WITH_LIBMV_SCHUR_SPECIALIZATIONS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_MEM_JEMALLOC
WITH_MEM_JEMALLOC-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_MEM_VALGRIND
WITH_MEM_VALGRIND-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_NINJA_POOL_JOBS
WITH_NINJA_POOL_JOBS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_OPENGL_BACKEND
WITH_OPENGL_BACKEND-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_OPENVDB_3_ABI_COMPATIBLE
WITH_OPENVDB_3_ABI_COMPATIBLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_PYTHON
WITH_PYTHON-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_PYTHON_SAFETY
WITH_PYTHON_SAFETY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_PYTHON_SECURITY
WITH_PYTHON_SECURITY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_RENDERDOC
WITH_RENDERDOC-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_STRSIZE_DEBUG
WITH_STRSIZE_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_SYSTEM_AUDASPACE
WITH_SYSTEM_AUDASPACE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_SYSTEM_BULLET
WITH_SYSTEM_BULLET-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_SYSTEM_GFLAGS
WITH_SYSTEM_GFLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_SYSTEM_GLOG
WITH_SYSTEM_GLOG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_SYSTEM_PYTHON_TESTS
WITH_SYSTEM_PYTHON_TESTS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_TESTS_BATCHED
WITH_TESTS_BATCHED-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_TESTS_SINGLE_BINARY
WITH_TESTS_SINGLE_BINARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_UNITY_BUILD
WITH_UNITY_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_VULKAN_BACKEND
WITH_VULKAN_BACKEND-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_WINDOWS_BUNDLE_CRT
WITH_WINDOWS_BUNDLE_CRT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_WINDOWS_EXTERNAL_MANIFEST
WITH_WINDOWS_EXTERNAL_MANIFEST-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_WINDOWS_FIND_MODULES
WITH_WINDOWS_FIND_MODULES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_WINDOWS_RELEASE_PDB
WITH_WINDOWS_RELEASE_PDB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_WINDOWS_RELEASE_STRIPPED_PDB
WITH_WINDOWS_RELEASE_STRIPPED_PDB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_WINDOWS_SCCACHE
WITH_WINDOWS_SCCACHE-ADVANCED:INTERNAL=1

